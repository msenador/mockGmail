[{"/Users/msenador/mockGmail/mock-gmail/src/index.js":"1","/Users/msenador/mockGmail/mock-gmail/src/reportWebVitals.js":"2","/Users/msenador/mockGmail/mock-gmail/src/App.js":"3","/Users/msenador/mockGmail/mock-gmail/src/components/AllMessages.js":"4","/Users/msenador/mockGmail/mock-gmail/src/components/Home.js":"5","/Users/msenador/mockGmail/mock-gmail/src/components/Search.js":"6","/Users/msenador/mockGmail/mock-gmail/src/components/MessageDetails.js":"7","/Users/msenador/mockGmail/mock-gmail/src/components/SendEmails.js":"8"},{"size":500,"mtime":1607722376896,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1607722376898,"results":"11","hashOfConfig":"10"},{"size":1652,"mtime":1607724986244,"results":"12","hashOfConfig":"10"},{"size":618,"mtime":1607724248838,"results":"13","hashOfConfig":"10"},{"size":154,"mtime":1607724006266,"results":"14","hashOfConfig":"10"},{"size":2134,"mtime":1607724001170,"results":"15","hashOfConfig":"10"},{"size":647,"mtime":1607724003890,"results":"16","hashOfConfig":"10"},{"size":2889,"mtime":1607725070210,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"iow4eh",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/msenador/mockGmail/mock-gmail/src/index.js",[],["37","38"],"/Users/msenador/mockGmail/mock-gmail/src/reportWebVitals.js",[],"/Users/msenador/mockGmail/mock-gmail/src/App.js",[],"/Users/msenador/mockGmail/mock-gmail/src/components/AllMessages.js",["39","40","41"],"import React from 'react'\nimport { Switch, Link, Route, useRouteMatch } from 'react-router-dom'\nimport MessageDetails from './MessageDetails'\n\n\nconst AllMessages = ({allEmails}) => {\n    const match = useRouteMatch()\n\n    return (\n        <>\n        <h3>Here are all of your emails! (Sender & Subject)</h3>\n        <p>Click to see details</p>\n        <ul>\n        { allEmails.map(items => {\n            return(\n                <li><Link to={`${match.url}/${items.id}`}>Sender: {items.sender} Subject: {items.subject}</Link></li>\n            )\n        }) }\n        </ul>\n        </>\n    )\n}\n\nexport default AllMessages;","/Users/msenador/mockGmail/mock-gmail/src/components/Home.js",[],"/Users/msenador/mockGmail/mock-gmail/src/components/Search.js",["42"],"import React from 'react'\n\n// const SearchAll = ({search}) => {\n\n//   var getInput = <input type=\"text\" placeholder='Search by subject' id='searchEmail'/>\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const formInput = e.target.searchEmail.value;\n//   }\n\n//   const getEmail = (formInput) => {\n//     alert(formInput)\n//     search.forEach(item => {\n//       if(item.subject === formInput){\n//         return(\n//           <>\n//             <p>{item.subject}</p>\n//           </>\n//         )\n//       }\n//     })\n//   }\n\n//   return(\n//     <>\n\n//       <form onSubmit={handleSubmit}>\n//        <p>{getInput}</p>\n//        <button> Search</button>\n//        </form>\n       \n\n//     </>\n//   )\n// }\n\n// export default SearchAll;\n\nclass SearchAll extends React.Component {\n    constructor({search}){\n        super({search});\n        this.state = { \n          emails : search,\n          formInput: ''\n        }\n      }\n\n    handleChange = (e) => {\n      this.setState({formInput: e.target.value})\n      console.log(this.state.formInput)\n    }\n\n    handleSubmit = (e) => {\n      e.preventDefault();\n      console.log(e.target.searchSubject.value)\n      console.log(this.state.emails)\n      this.state.emails.map(subjects => {\n        if(subjects.subject === e.target.searchSubject.value){\n        return (\n          \n          <li>Subjects: {subjects.subject}\n          </li>\n          )\n        }\n      })\n    }\n\n    // getDetails = () => {\n    //   console.log(this.state.emails)\n    //   this.state.emails.map(subjects => {\n    //     if(subjects.subject === this.formInput){\n    //     return (\n    //       <li>Subjects: {subjects.subject}</li>\n    //     )\n    //     }\n    //   })\n    // }\n\n    render(){\n      return(\n        <form onSubmit={this.handleSubmit}>\n        {/* // <form> */}\n        <h3>*Search by subject*</h3>\n        <input type='text' id='searchSubject' placeholder='Search by subject' onChange={this.handleChange}/>\n        <button>Search</button>\n        {/* <u>\n          {\n            this.getDetails\n          }\n        </u> */}\n        </form>\n    )\n  }\n}\n\nexport default SearchAll;","/Users/msenador/mockGmail/mock-gmail/src/components/MessageDetails.js",[],"/Users/msenador/mockGmail/mock-gmail/src/components/SendEmails.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":2,"column":10,"nodeType":"49","messageId":"50","endLine":2,"endColumn":16},{"ruleId":"47","severity":1,"message":"51","line":2,"column":24,"nodeType":"49","messageId":"50","endLine":2,"endColumn":29},{"ruleId":"47","severity":1,"message":"52","line":3,"column":8,"nodeType":"49","messageId":"50","endLine":3,"endColumn":22},{"ruleId":"53","severity":1,"message":"54","line":58,"column":38,"nodeType":"55","messageId":"56","endLine":58,"endColumn":40},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'MessageDetails' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]